#pragma checksum "C:\Users\MAJablonski\source\old repos\DeleteUPC\DeleteUPC\Views\Home\DeleteUPC.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "aa8bf9f860ba60dcc382f65f4860e77bae8ea950"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_DeleteUPC), @"mvc.1.0.view", @"/Views/Home/DeleteUPC.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/DeleteUPC.cshtml", typeof(AspNetCore.Views_Home_DeleteUPC))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\MAJablonski\source\old repos\DeleteUPC\DeleteUPC\Views\_ViewImports.cshtml"
using DeleteUPC;

#line default
#line hidden
#line 2 "C:\Users\MAJablonski\source\old repos\DeleteUPC\DeleteUPC\Views\_ViewImports.cshtml"
using DeleteUPC.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa8bf9f860ba60dcc382f65f4860e77bae8ea950", @"/Views/Home/DeleteUPC.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5bdf4fd7414db9388d3e82b1ce1ccd717a623b70", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_DeleteUPC : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/StyleSheet1.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jstree/themes/default/style.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("charset", new global::Microsoft.AspNetCore.Html.HtmlString("utf8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jstree/jstree.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\MAJablonski\source\old repos\DeleteUPC\DeleteUPC\Views\Home\DeleteUPC.cshtml"
  
    ViewData["Title"] = "DeleteUPC";

#line default
#line hidden
            BeginContext(47, 10, true);
            WriteLiteral("\r\n<html>\r\n");
            EndContext();
            BeginContext(57, 38274, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a523f03592ef4369a9325567fb823839", async() => {
                BeginContext(63, 12, true);
                WriteLiteral("\r\n\r\n\r\n\r\n    ");
                EndContext();
                BeginContext(75, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "3d3adfca9576481392d320a47be469b8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(143, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(221, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(227, 72, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "477aedd068eb4f51a2d83057c7c25f8e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(299, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(305, 88, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f1355ff8bd0a41d59cab84540da7f94d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(393, 36916, true);
                WriteLiteral(@"


    <script type=""text/javascript"">

        var TempString = """";

        window.onload = function () {
            LoadLabels();
        }



        function LoadLabels() {

            document.getElementById(""CLUSTERNBR"").style.display = ""none""; 

            Refresh(""N"");

            var TempHeading = """";
            var TempHeading2 = """";

            TempHeading = TempHeading + ""Div"" + ""&nbsp;"".repeat(2);
            TempHeading = TempHeading + ""Item Number"" + ""&nbsp;"".repeat(3);
            TempHeading = TempHeading + ""UPC"" + ""&nbsp;"".repeat(11);
            TempHeading = TempHeading + ""Product Description"" + ""&nbsp;"".repeat(10);
            TempHeading = TempHeading + ""Section"" + ""&nbsp;"".repeat(5);
            TempHeading = TempHeading + ""Old UPC Status"" + ""&nbsp;"".repeat(5);
            TempHeading = TempHeading + ""Update ID"" + ""&nbsp;"".repeat(5);
            TempHeading = TempHeading + ""Update Date"";


            TempHeading2 = TempHeading2 + ""Div"" + ""&nbsp;"".");
                WriteLiteral(@"repeat(2);
            TempHeading2 = TempHeading2 + ""Item Number"" + ""&nbsp;"".repeat(2);
            TempHeading2 = TempHeading2 + ""UPC"" + ""&nbsp;"".repeat(11);
            TempHeading2 = TempHeading2 + ""Product Description"" + ""&nbsp;"".repeat(6);


            document.getElementById(""GRIDHEADING"").innerHTML = TempHeading;
            document.getElementById(""GRIDHEADING2"").innerHTML = TempHeading2;

        }

        function Refresh(MessageClear) {

            document.getElementById(""DELETEREQUEST"").checked = true;
            document.getElementById(""DELETEREVIEW"").checked = false;
            document.getElementById(""DELETEREVERSAL"").checked = false;

            document.getElementById(""UPCLISTLABEL"").innerHTML = ""Delete Request UPC List"";
          


                       
            if (MessageClear == ""Y"") {
                document.getElementById(""ERRORMESSAGE"").value = """";

            }

            var objSelect = document.getElementById(""SELECTIONUPCLIST"");
      ");
                WriteLiteral(@"      while (objSelect.options.length > 0) objSelect.remove(0);


            var objSelect = document.getElementById(""CURRENTUPCLIST"");
            while (objSelect.options.length > 0) objSelect.remove(0);

            DeleteRequest();
        }

        function DeleteRequest() {

            document.getElementById(""DELETEREQUEST"").checked = true;
            document.getElementById(""DELETEREVIEW"").checked = false;
            document.getElementById(""DELETEREVERSAL"").checked = false;

            document.getElementById(""UPCLISTLABEL"").innerHTML = ""Delete Request UPC List"";

          
            // ajax Routine
            var myData = {};
            var token = $('input[name=""__RequestVerificationToken""]', $('#DeleteUPC')).val();
            var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

           

            $.ajax({
                url: ""DeleteUPC/DUPC/DisplayPendingRequests"",
                type: ""GET"",
                data");
                WriteLiteral(@": dataWithAntiforgeryToken,
                //  data: myData;
                dataType: ""json"",
                // contentType: ""application/json; charset=utf-8"",
                async: false,
                success: function (response) {

                    var objSelect = document.getElementById(""CURRENTUPCLIST"");
                    while (objSelect.options.length > 0) objSelect.remove(0);

                    var Results = response.AppDataSet;


                    var TempITEM_DIV = """";
                    var TempITEM_NBR = """";
                    var TempUPC = """";
                    var TempUPCID = """";
                    var TempPRODUCT_DESCRIPTION = """";
                    var TempSECTION = """";
                    var TempUPDATEID = """";
                    var TempOLDUPCSTATUS = """";
                    var TempUPDATEDATE = """";

                    if (response.Message == ""Success"") {

                        //  alert(""loop"")

                        for (var listIndex =");
                WriteLiteral(@" 0; listIndex < Results.Table.length; listIndex++) {



                            var record = Results.Table[listIndex];

                            //   alert(""loop 1"")

                            TempITEM_DIV = record.ITEMDIV.trim();
                            TempITEM_NBR = record.ITEMNBR.trim();
                            TempUPC = record.UPC.trim();
                            TempUPCID = record.UPCID.trim();
                            TempPRODUCT_DESCRIPTION = record.PRODUCTDESCRIPTION.trim();
                            TempSECTION = record.SECTION.trim();
                            TempUPDATEID = record.UPDATEID.trim();
                            TempOLDUPCSTATUS = record.OLDUPCSTATUS.trim();
                          //  TempUPDATEDATE = Convert.ToDateTime(record.UPDATEDATE.trim()).ToString(""MM/dd/yyy"");
                            TempUPDATEDATE =  record.UPDATEDATE.trim();

                            TempUPDATEDATE = TempUPDATEDATE.substring(0,10)

                   ");
                WriteLiteral(@"        
                            opt = document.createElement(""option"");
                            opt.value = TempUPCID;

                            // alert(TempOLDUPCSTATUS.length)

                            //alert(""TempITEM_NBR "" + TempITEM_NBR.length);
                            //alert(""TempUPC "" + TempUPC.length);

                            //alert(""TempPRODUCT_DESCRIPTION "" + TempPRODUCT_DESCRIPTION.length);
                            //alert(""TempSECTION "" + TempSECTION.length);
                            //alert(""TempUPDATEID "" + TempUPDATEID.length);
                            //alert(""TempOLDUPCSTATUS "" + TempOLDUPCSTATUS.length);
                            //alert(""TempUPDATEDATE "" + TempUPDATEDATE.length);


                            opt.innerHTML = TempITEM_DIV + ""&nbsp;"".repeat(3) + TempITEM_NBR + ""&nbsp;"".repeat(14 - (TempITEM_NBR.length)) + TempUPC + ""&nbsp;"".repeat(15 - (TempUPC.length)) + TempPRODUCT_DESCRIPTION + ""&nbsp;"".repeat(29 - (TempPRODUCT_DESCRIP");
                WriteLiteral(@"TION.length)) + TempSECTION + ""&nbsp;"".repeat(12 - (TempSECTION.length)) + TempOLDUPCSTATUS + ""&nbsp;"".repeat(19 - (TempOLDUPCSTATUS.length)) + TempUPDATEID + ""&nbsp;"".repeat(14 - (TempUPDATEID.length)) + TempUPDATEDATE;
                         //   opt.innerHTML = TempITEM_DIV + ""&nbsp;"".repeat(3) + TempITEM_NBR + ""&nbsp;"".repeat(3) + TempUPC + ""&nbsp;"".repeat(3) + TempPRODUCT_DESCRIPTION + ""&nbsp;"".repeat(3) + TempSECTION + ""&nbsp;"".repeat(3) + TempUPDATEID + ""&nbsp;"".repeat(3) + TempOLDUPCSTATUS + ""&nbsp;"".repeat(3) + TempUPDATEDATE + ""&nbsp;"".repeat(3);

                          //  if (objSelect.length == 0) {

                                objSelect.appendChild(opt);
                         //   }

                         //   alert(""loop 3"")

                            //if (objSelect.length > 0) {

                            //    var FoundIt = 0;

                            //    for (var i = 0; i < objSelect.length; i++) {


                            //        if (objSele");
                WriteLiteral(@"ct.options[i].value == TempUPCID) {
                            //            FoundIt++;
                            //        }

                            //    }

                            //    if (FoundIt == 0) {
                            //        objSelect.appendChild(opt);
                            //    }
                          //  }
                        }

                       
                    }

                    if (response.Message == ""Failure"") {

                        document.getElementById(""ERRORMESSAGE"").style.color = 'Red';
                        document.getElementById(""ERRORMESSAGE"").value = ""Error - displaying pending delete request list."";
                        
                    }

                    return;

                },

                error: function (jqXHR, textStatus, errorThrown) {
                    //  alert(""Ajax Error:"" + response.Message);
                    alert(""Ajax Error:"" + textStatus + "" "" + errorThrown");
                WriteLiteral(@");
                },
                failure: function (response) {
                    alert(""Ajax Failure:"" + response.Message);
                },

            });

            return;
        }

        

        function DeleteReview() {

            document.getElementById(""DELETEREQUEST"").checked = false;
            document.getElementById(""DELETEREVIEW"").checked = true;
            document.getElementById(""DELETEREVERSAL"").checked = false;

            document.getElementById(""UPCLISTLABEL"").innerHTML = ""Delete Review UPC List"";

            // ajax Routine


        }

        function DeleteReversal() {

            document.getElementById(""DELETEREQUEST"").checked = false;
            document.getElementById(""DELETEREVIEW"").checked = false;
            document.getElementById(""DELETEREVERSAL"").checked = true;

            document.getElementById(""UPCLISTLABEL"").innerHTML = ""Delete Reqversal UPC List"";

            // ajax Routine


        }

        function");
                WriteLiteral(@" EnterDownPaste(e) {

            if (e.keyCode === 13) {


                AddPastedUPCs()

            }

            if (e.keyCode === 9) {


                AddPastedUPCs()

            }
        }

        function AddPastedUPCs() {  // add to selection list not current list





           // document.getElementById(""SINGLEUPC"").value = """";
           
           // document.getElementById(""UPCSEARCH"").value = """";

            var GoodUPCs = 0;
            var BadUPCs = 0;

          

          //  var objSelect = document.getElementById(""CURRENTUPCLIST"");
           

            var TempUPC = document.getElementById(""PASTEDUPCLIST"").value;

            TempUPC = TempUPC.replace(/[ ,]+/g, "","");
            TempUPC = TempUPC.replace(new RegExp(""[\r\n]"", ""gm""), "","");


            var TempArray = JSON.parse(""["" + TempUPC + ""]"");




            for (var i = 0; i < TempArray.length; i++) {




                var myData = { UPC: TempArray[i] };
        ");
                WriteLiteral(@"        var token = $('input[name=""__RequestVerificationToken""]', $('#MainForm')).val();
                var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

                $.ajax({
                    url: ""DeleteUPC/DUPC/ValidateUPC"",
                    type: ""GET"",
                    data: dataWithAntiforgeryToken,
                    dataType: ""json"",
                    async: false,
                    success: function (response) {

                        if (response.Success == true) {

                            GoodUPCs++;

                            DisplayUPCinResults(TempArray[i]);
                        }
                        else {

                            BadUPCs++;

                        }

                    },

                    error: function (jqXHR, textStatus, errorThrown) {
                        //  alert(""Ajax Error:"" + response.Message);
                        alert(""Ajax Error:"" + textStatus + "" """);
                WriteLiteral(@" + errorThrown);
                    },
                    failure: function (response) {
                        alert(""Ajax Failure:"" + response.Message);
                    },

                });




            }

            document.getElementById(""ERRORMESSAGE"").style.color = 'Green';
            document.getElementById(""ERRORMESSAGE"").value = ""Entered or Pasted UPC list contained "" + GoodUPCs + "" valid UPCs and "" + BadUPCs + "" invalid UPCs"";
            document.getElementById(""PASTEDUPCLIST"").value = """";
        }

        function DisplayUPCinResults(UPC) {

           

         var myData = { UPC: UPC };
         var token = $('input[name=""__RequestVerificationToken""]', $('#MainForm')).val();
         var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

          $.ajax({
            url: ""DeleteUPC/DUPC/DisplayUPCinResults"",
            type: ""GET"",
            data: dataWithAntiforgeryToken,
            dataType: ""json"",
   ");
                WriteLiteral(@"         async: false,
            success: function (response) {

                var objSelect = document.getElementById(""SELECTIONUPCLIST"");
                //  while (objSelect.options.length > 0) objSelect.remove(0);

                var Results = response.AppDataSet;


                var TempITEM_DIV = """";
                var TempITEM_NBR = """";
                var TempUPC = """";
                var TempUPCID = """";
                var TempPRODUCT_DESCRIPTION = """";

                if (response.Message == ""Success"") {



                    for (var listIndex = 0; listIndex < Results.Table.length; listIndex++) {



                        var record = Results.Table[listIndex];



                        TempITEM_DIV = record.ITEMDIV;
                        TempITEM_NBR = record.ITEMNBR;
                        TempUPC = record.UPC;
                        TempUPCID = record.UPCID;
                        TempPRODUCT_DESCRIPTION = record.PRODUCTDESCRIPTION;


            ");
                WriteLiteral(@"            opt = document.createElement(""option"");
                        opt.value = TempUPCID;


                        opt.innerHTML = TempITEM_DIV + ""&nbsp;"".repeat(3) + TempITEM_NBR + ""&nbsp;"".repeat(13 - (TempITEM_NBR.length)) + TempUPC + ""&nbsp;"".repeat(14 - (TempUPC.length)) + TempPRODUCT_DESCRIPTION;

                        if (objSelect.length == 0) {

                            objSelect.appendChild(opt);
                        }

                        if (objSelect.length > 0) {

                            var FoundIt = 0;

                            for (var i = 0; i < objSelect.length; i++) {


                                if (objSelect.options[i].value == TempUPCID) {
                                    FoundIt++;
                                }

                            }

                            if (FoundIt == 0) {
                                objSelect.appendChild(opt);
                            }
                        }
              ");
                WriteLiteral(@"      }

                }

                if (response.Message == ""Failure"") {

                    document.getElementById(""ERRORMESSAGE"").style.color = 'Red';
                    document.getElementById(""ERRORMESSAGE"").value = ""Invalid UPC"";
                    return;
                }

                return;

            },

            error: function (jqXHR, textStatus, errorThrown) {
                //  alert(""Ajax Error:"" + response.Message);
                alert(""Ajax Error:"" + textStatus + "" "" + errorThrown);
            },
            failure: function (response) {
                alert(""Ajax Failure:"" + response.Message);
            },

          });


        }


        function DisplayUPCIDinResults(UPCID) {



            var myData = { UPCID: UPCID };
            var token = $('input[name=""__RequestVerificationToken""]', $('#MainForm')).val();
            var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

       ");
                WriteLiteral(@"     $.ajax({
                url: ""DeleteUPC/DUPC/DisplayUPCIDinResults"",
                type: ""GET"",
                data: dataWithAntiforgeryToken,
                dataType: ""json"",
                async: false,
                success: function (response) {

                    var objSelect = document.getElementById(""CURRENTUPCLIST"");
                    //  while (objSelect.options.length > 0) objSelect.remove(0);

                    var Results = response.AppDataSet;


                    var TempITEM_DIV = """";
                    var TempITEM_NBR = """";
                    var TempUPC = """";
                    var TempUPCID = """";
                    var TempPRODUCT_DESCRIPTION = """";

                    if (response.Message == ""Success"") {



                        for (var listIndex = 0; listIndex < Results.Table.length; listIndex++) {



                            var record = Results.Table[listIndex];



                            TempITEM_DIV = record.ITEMDIV;
");
                WriteLiteral(@"                            TempITEM_NBR = record.ITEMNBR;
                            TempUPC = record.UPC;
                            TempUPCID = record.UPCID;
                            TempPRODUCT_DESCRIPTION = record.PRODUCTDESCRIPTION;


                            opt = document.createElement(""option"");
                            opt.value = TempUPCID;


                            opt.innerHTML = TempITEM_DIV + ""&nbsp;"".repeat(3) + TempITEM_NBR + ""&nbsp;"".repeat(14 - (TempITEM_NBR.length)) + TempUPC + ""&nbsp;"".repeat(15 - (TempUPC.length)) + TempPRODUCT_DESCRIPTION;

                            if (objSelect.length == 0) {

                                objSelect.appendChild(opt);
                            }

                            if (objSelect.length > 0) {

                                var FoundIt = 0;

                                for (var i = 0; i < objSelect.length; i++) {


                                    if (objSelect.options[i].value == TempUPCID)");
                WriteLiteral(@" {
                                        FoundIt++;
                                    }

                                }

                                if (FoundIt == 0) {
                                    objSelect.appendChild(opt);
                                }
                            }
                        }

                    }

                    if (response.Message == ""Failure"") {

                        document.getElementById(""ERRORMESSAGE"").style.color = 'Red';
                        document.getElementById(""ERRORMESSAGE"").value = ""Invalid UPC"";
                        return;
                    }

                    return;

                },

                error: function (jqXHR, textStatus, errorThrown) {
                    //  alert(""Ajax Error:"" + response.Message);
                    alert(""Ajax Error:"" + textStatus + "" "" + errorThrown);
                },
                failure: function (response) {
                    alert(""Aj");
                WriteLiteral(@"ax Failure:"" + response.Message);
                },

            });


        }



        function UPCSearch() {

          

            document.getElementById(""ERRORMESSAGE"").value = """";

            if (document.getElementById(""UPCSEARCH"").value.length < 1) {

                document.getElementById(""ERRORMESSAGE"").value = ""No product description entered."";
                return;
            }



            var myData = { Search: document.getElementById(""UPCSEARCH"").value };
            var token = $('input[name=""__RequestVerificationToken""]', $('#MainForm')).val();
            var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

            $.ajax({
                url: ""DeleteUPC/DUPC/SearchUPC"",
                type: ""GET"",
                data: dataWithAntiforgeryToken,
                dataType: ""json"",
                async: false,
                success: function (response) {

                    // var objSelect = docum");
                WriteLiteral(@"ent.getElementById(""UPCRESULTS"");
                    var Results = response.AppDataSet;

                   
                    var objSelect = document.getElementById(""SELECTIONUPCLIST"");
                    while (objSelect.options.length > 0) objSelect.remove(0);


                    if (response.Message == ""Success"") {



                        for (var listIndex = 0; listIndex < Results.Table.length; listIndex++) {



                            var record = Results.Table[listIndex];



                            TempITEM_DIV = record.ITEMDIV;
                            TempITEM_NBR = record.ITEMNBR;
                            TempUPC = record.UPC;
                            TempUPCID = record.UPCID;
                            TempPRODUCT_DESCRIPTION = record.PRODUCTDESCRIPTION;


                            opt = document.createElement(""option"");
                            opt.value = TempUPCID;  // change to UPC for UPCMoveOne function
                           ");
                WriteLiteral(@"
                            opt.innerHTML = TempITEM_DIV + ""&nbsp;"".repeat(3) + TempITEM_NBR + ""&nbsp;"".repeat(13 - (TempITEM_NBR.length)) + TempUPC + ""&nbsp;"".repeat(14 - (TempUPC.length)) + TempPRODUCT_DESCRIPTION;
                            

                            objSelect.appendChild(opt);
                        }


                        document.getElementById(""ERRORMESSAGE"").style.color = 'Green';
                        document.getElementById(""ERRORMESSAGE"").value = ""Double click result UPCs to add to current UPC list."";
                        document.getElementById(""UPCSEARCH"").value = """";


                    }

                    if (response.Message == ""Failure"") {

                        document.getElementById(""ERRORMESSAGE"").style.color = 'Red';
                        document.getElementById(""ERRORMESSAGE"").value = ""No search results."";
                        return;
                    }

                    return;

                },

             ");
                WriteLiteral(@"   error: function (jqXHR, textStatus, errorThrown) {
                    //  alert(""Ajax Error:"" + response.Message);
                    alert(""Ajax Error:"" + textStatus + "" "" + errorThrown);
                },
                failure: function (response) {
                    alert(""Ajax Failure:"" + response.Message);
                },

            });


        }


        function AddUPC() {

          
            var TempUPCID = document.getElementById(""SELECTIONUPCLIST"").value;

            var selectobject = document.getElementById(""CURRENTUPCLIST"");

                                 
            for (var i = 0; i < selectobject.length; i++) {



                if (selectobject.options[i].value == TempUPCID) {
                    return; // already added
                }
            }

            DisplayUPCIDinResults(TempUPCID);

        }

        function AddAllselections() {

           

            var selectobjectLOOP = document.getElementById(""SELECT");
                WriteLiteral(@"IONUPCLIST"");
            var selectobject = document.getElementById(""CURRENTUPCLIST"");


            for (var L = 0; L < selectobjectLOOP.length; L++) {

                var TempUPCID = selectobjectLOOP.options[L].value

               
              

                for (var i = 0; i < selectobject.length; i++) {



                    if (selectobject.options[i].value == TempUPCID) {
                        return; // already added
                    }
                }

                DisplayUPCIDinResults(TempUPCID);
            }
        }

        function ClusterUPCs() {

            GetClusterNbr();
            GetClusterUPCs();
        }

        function GetClusterUPCs() {

                     

            document.getElementById(""ERRORMESSAGE"").value = """";


            var ClusterNbr = document.getElementById(""CLUSTERNBR"").value;

            alert(""In get clusterupcs with nbr "" + ClusterNbr)
          
            var myData = { CLUSTER_NBR: ClusterN");
                WriteLiteral(@"br };
            var token = $('input[name=""__RequestVerificationToken""]', $('#DeleteUPC')).val();
            var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

            alert(""get here?"")


            $.ajax({

                type: ""GET"",
                url: ""DeleteUPC/DUPC/GetClusterUPCs"",
                //data: dataWithAntiforgeryToken,
                data: myData,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                async: true,
                success: function (response) {

                    var Results = response.AppDataSet;


                    var objSelect = document.getElementById(""SELECTIONUPCLIST"");
                    while (objSelect.options.length > 0) objSelect.remove(0);

                   

                    var TempITEM_DIV = """";
                    var TempITEM_NBR = """";
                    var TempUPC = """";
                    var TempUPCID = """);
                WriteLiteral(@""";
                    var TempPRODUCT_DESCRIPTION = """";


                    if (response.Message == ""Success"") {



                        for (var listIndex = 0; listIndex < Results.Table.length; listIndex++) {



                            var record = Results.Table[listIndex];



                            TempITEM_DIV = record.ITEMDIV;
                            TempITEM_NBR = record.ITEMNBR;
                            TempUPC = record.UPC;
                            TempUPCID = record.UPCID;

                            TempPRODUCT_DESCRIPTION = record.PRODUCTDESCRIPTION;


                            opt = document.createElement(""option"");
                            opt.value = TempUPCID;


                          //  opt.innerHTML = ""("" + TempITEM_DIV + "" "" + TempITEM_NBR + "") "" + TempUPC + "" "" + TempPRODUCT_DESCRIPTION;
                            opt.innerHTML = TempITEM_DIV + ""&nbsp;"".repeat(3) + TempITEM_NBR + ""&nbsp;"".repeat(13 - (TempITEM_NBR.length)) + Te");
                WriteLiteral(@"mpUPC + ""&nbsp;"".repeat(14 - (TempUPC.length)) + TempPRODUCT_DESCRIPTION;


                            if (objSelect.length == 0) {

                                objSelect.appendChild(opt);
                            }

                            if (objSelect.length > 0) {

                                var FoundIt = 0;

                                for (var i = 0; i < objSelect.length; i++) {


                                    if (objSelect.options[i].value == TempUPCID) {
                                        FoundIt++;
                                    }

                                }

                                if (FoundIt == 0) {
                                    objSelect.appendChild(opt);
                                }
                            }



                        }

                     
                    }

                    if (response.Message == ""Failure"") {

                        document.getElementById(""ERRORMES");
                WriteLiteral(@"SAGE"").style.color = 'Red';
                        document.getElementById(""ERRORMESSAGE"").value = ""No UPCs in cluster "" + document.getElementById(""CLUSTERNAME"").value ;

                    }

                },

                error: function (jqXHR, textStatus, errorThrown) {
                    alert(""Ajax Error:"" + response.Message);
                    alert(""Ajax Error:"" + textStatus + "" "" + errorThrown);
                },
                failure: function (response) {
                    alert(""Ajax Failure:"" + response.Message);
                },

            });

          
            return;





        }

        function GetClusterNbr() {
                                


            var ClusterName = document.getElementById(""CLUSTERNAME"").value;


            if (ClusterName.length == 0) {

                document.getElementById(""ERRORMESSAGE"").style.color = 'Red';
                document.getElementById(""ERRORMESSAGE"").value = ""No Cluster Name entered");
                WriteLiteral(@". "";

                return
            }


            var myData = { CLUSTER_NAME: ClusterName };
            var token = $('input[name=""__RequestVerificationToken""]', $('#DeleteUPC')).val();
            var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

          

            $.ajax({

                type: ""GET"",
                url: ""DeleteUPC/DUPC/GetClusterNbr"",
                //data: dataWithAntiforgeryToken,
                data: myData,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                async: false,
                success: function (response) {

                    var Results = response.AppDataSet;





                                    

                    if (response.Message == ""Success"") {



                        for (var listIndex = 0; listIndex < Results.Table.length; listIndex++) {



                            var record = Results.Table[li");
                WriteLiteral(@"stIndex];


                            document.getElementById(""CLUSTERNBR"").value = record.CLUSTERNBR;

                          

                            return;
                          
                          

                        }

                     
                    }

                    if (response.Message == ""Failure"") {

                        document.getElementById(""ERRORMESSAGE"").style.color = 'Red';
                        document.getElementById(""ERRORMESSAGE"").value = ""Error trying to get cluster number."";

                    }

                },

                error: function (jqXHR, textStatus, errorThrown) {
                    alert(""Ajax Error:"" + response.Message);
                    alert(""Ajax Error:"" + textStatus + "" "" + errorThrown);
                },
                failure: function (response) {
                    alert(""Ajax Failure:"" + response.Message);
                },

            });

                   


");
                WriteLiteral(@"
            return 

        }


    </script>

    <table border=""0"" style=""width:800px; position:absolute; top:60px; "">
        <tr>
            <td>




                <label id=""Title"" style=""font-size:30px"">UPC Delete </label>

                <a href=""https://docs.google.com/presentation/d/1MsyDnP4-6EVjRLuE22Fj6LXVASUIsfjJ8_h1bKgVzIQ/edit?usp=sharing"" target=""_blank"" style=""float:right"">Job aid slides </a>


            </td>
        </tr>
    </table>


    <table border=""1"" style=""width:800px; position:absolute; top:120px; border-color:Red"">


        <tr>
            <td>
                <table style=""border:hidden"">

                    <tr>
                        <td>
                            <label>Select a view:</label>
                        </td>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <");
                WriteLiteral(@"input id=""DELETEREQUEST"" type=""checkbox"" class=""LargeCheckbox"" name=""Delete Request"" onclick=""DeleteRequest()"" />
                            <label for=""Delete Request"">Delete Request</label>
                        </td>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id=""DELETEREVIEW"" type=""checkbox"" class=""LargeCheckbox"" name=""Delete Review"" onclick=""DeleteReview()"" />
                            <label for=""Delete Request"">Delete Review</label>
                        </td>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id=""DELETEREVERSAL"" type=""checkbox"" class=""LargeCheckbox"" name=""Delete Reversal"" onclick=""DeleteReversal()"" />
                            <label for=""");
                WriteLiteral(@"Delete Request"">Delete Reversal</label>
                        </td>
                        <td>
                            &nbsp;
                        </td>
                    </tr>

                </table>
            </td>
        </tr>
        <tr style=""border-bottom:dashed; border-bottom-color:red"">
            <td>
                <table style=""border:hidden"">


                    <tr>

                        <td colspan=""3"">
                            <label>UPC Search and Selections:</label>
                        </td>

                    </tr>






                    <tr>
                        <td>
                            <label>Enter a Single UPC/Item Number or a Pasted UPC List:</label>
                        </td>
                        <td>
                            <input type=""text"" id=""PASTEDUPCLIST"" class=""textbox"" style=""width:200px"" onkeypress=""EnterDownPaste(event)"">
                        </td>

                        <td>
");
                WriteLiteral(@"                            
                            <input type=""button"" id=""ADDPASTED"" class=""button"" style=""float:left;"" value=""Enter"" onclick=""AddPastedUPCs();"" />
                        </td>

                    </tr>




                    <tr style=""border-bottom:hidden"">
                      <td>
                        <label>UPC Search (enter partial description):</label>

                      </td>

                      <td>
                        <input type=""text"" id=""UPCSEARCH"" class=""textbox"" maxlength=""50"" style=""width:200px"">
                      </td>

                      <td>
                        <input type=""button"" id=""SEARCHUPC"" class=""button"" style=""float:left;"" value=""Search"" onclick=""UPCSearch();"" />
                      </td>

                    </tr>


                    <tr style=""border-top:hidden"">
                        <td>
                            <label>Enter a UPC Cluster Name:</label>
                        </td>

    ");
                WriteLiteral(@"                    <td>
                            <input type=""text"" id=""CLUSTERNAME"" class=""textbox"" maxlength=""20"" style=""width:200px"">
                        </td>

                        <td>
                            <input type=""button"" id=""GETCLUSTERUPCS"" class=""button"" style=""float:left;"" value=""Retrieve Cluster UPCs"" onclick=""ClusterUPCs();"" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>   
          
            
              
        <tr>
            <td>
                <table style=""border:hidden"">



                    <tr>

                        <td>
                            <label>Selection Results</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label id=""GRIDHEADING2"" style=""font-family:Courier; font-size: 12px; font-weight:800""></label>

                            <select id=""SELECT");
                WriteLiteral(@"IONUPCLIST"" class=""textbox"" style=""font-family:Courier; float:left; width:800px;"" size=""10"" ondblclick=""AddUPC()""></select>


                        </td>


                    </tr>
                  

                    <tr>
                        <td>
                            <input type=""button"" id=""ADDALLUPCS"" class=""button"" style=""float:left;"" value=""Add All UPC selections"" title="""" ; onclick=""AddAllselections()"" />

                        </td>
                    </tr>

                </table>

            </td>
        </tr>
        <tr>
            <td>

                <table style=""border:hidden"">


                    <tr>

                        <td>

                            <label id=""UPCLISTLABEL"">UPC List</label>
                        </td>
                    </tr>
                    <tr>
                        <td>

                            <label id=""GRIDHEADING"" style=""font-family:Courier; font-size: 12px; font-weight:800""></label>
");
                WriteLiteral(@"
                            <select id=""CURRENTUPCLIST"" class=""textbox"" style=""font-family:Courier; float:left; width:900px;"" size=""10"" ondblclick=""RemoveUPC()""></select>


                        </td>



                    </tr>




                    <tr style=""border-bottom:hidden"">
                        <td colspan=""1"" style=""border-right:hidden"">



                            <input type=""button"" id=""SAVEBUTTON"" class=""button"" style=""float:left;"" value=""Save UPC selections"" title="""" ; onclick=""SaveSelections;"" />
                            <input type=""button"" id=""REFRESH"" class=""button"" style=""margin-right: 10px; float:right; "" value=""Refresh Screen"" title="""" ; onclick=""Refresh('Y');"" />



                        </td>


                    </tr>

                    <tr style=""border-top:hidden"">
                        <td colspan=""4"">


                            <label>Messages: </label>


                            <input id=""ERRORMESSAGE"" type=""text"" c");
                WriteLiteral("lass=\"messagebox\" style=\"width:1000px\" readonly>\r\n\r\n");
                EndContext();
                BeginContext(37503, 821, true);
                WriteLiteral(@"


                        </td>
                    </tr>

                    <tr style=""border-bottom:hidden"">
                        <td colspan=""4"">
                            <asp:Label ID=""CopyrightLabel"" runat=""server"" Font-Names=""Arial"" Font-Size=""X-Small"" Text="" ""></asp:Label>
                        </td>
                    </tr>
                    <tr style=""border-top:hidden"">
                        <td colspan=""4"">
                            <asp:Label ID=""UserRole"" runat=""server"" Font-Names=""Arial"" Font-Size=""X-Small"" Text="" ""></asp:Label>
                            <input type=""text"" id=""CLUSTERNBR"" class=""textbox"" style=""width:50px"">
                        </td>
                    </tr>

                </table>

            </td>
        </tr>
    </table>


");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38331, 13, true);
            WriteLiteral("\r\n\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
